package view

import "github.com/Hannnes1/polyglot/types"

templ Index(translations []types.BaseTranslation) {
	<!DOCTYPE html>
	<html>
		<head>
			<title>Translations - Polyglot</title>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<link href="/assets/style.css" rel="stylesheet"/>
			<script src="https://unpkg.com/htmx.org@2.0.1" crossorigin="anonymous"></script>
			<script src="/assets/index.js"></script>
		</head>
		<body>
			<form hx-post="/" hx-ext="json-enc-custom" hx-target="#confirmation" hx-swap="outerHTML settle:2s">
				<span class="flex gap-5 justify-end m-5 items-center">
					@Confirmation()
					<button type="submit" class="bg-blue-500 hover:bg-blue-600 text-white py-1 px-5 rounded">Save</button>
				</span>
				<div class="m-5">
					@buildTranslations(translations)
				</div>
			</form>
		</body>
	</html>
}

templ buildTranslations(translations []types.BaseTranslation, parentKeys ...string) {
	for _, t := range translations {
		switch v := t.(type) {
			case types.Translation:
				@translation(v, parentKeys...)
			case types.TranslationGroup:
				@translationGroup(v, parentKeys...)
		}
	}
}

templ translation(translation types.Translation, parentKeys ...string) {
	<div class="flex gap-5 my-4">
		<p class="flex-1">{ translation.Key() }:</p>
		<textarea class="flex-[2] bg-gray-200 rounded p-1" name={ buildName("en", append(parentKeys, translation.Key())...) }>
			{ translation.En }
		</textarea>
		<textarea class="flex-[2] bg-gray-200 rounded p-1" name={ buildName("sv", append(parentKeys, translation.Key())...) }>
			{ translation.Sv }
		</textarea>
	</div>
}

templ translationGroup(group types.TranslationGroup, parentKey ...string) {
	<fieldset class="border p-5">
		<legend class="font-bold">{ group.Key() }</legend>
		@buildTranslations(group.Data, append(parentKey, group.Key())...)
	</fieldset>
}

func buildName(lang string, keys ...string) string {
	result := lang

	for _, key := range keys {
		if result == "" {
			result = key
		} else {
			result += "[" + key + "]"
		}
	}

	return result
}

templ Confirmation() {
	<p id="confirmation" class="opacity-0 htmx-settling:opacity-100 transition-all duration-200">Saved!</p>
}
